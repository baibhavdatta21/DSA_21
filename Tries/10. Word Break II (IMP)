problem link-> https://leetcode.com/problems/word-break-ii/

Trie+ dfs

class Node
{
    public:
    Node* links[26];
    bool end=0;
};
class Solution {
public:
    void insert(Node* root,vector<string>& word)
    {
        Node* dum=root;
        int n=word.size();
        for(int i=0;i<n;i++)
        {
            Node*dum2=dum;
            for(int j=0;j<word[i].size();j++)
            {
                if(dum2->links[word[i][j]-'a']==NULL)
                dum2->links[word[i][j]-'a']=new Node();
                dum2=dum2->links[word[i][j]-'a'];
            }
            dum2->end=1;
        }
    }
    void solver(int i,string &s,string dum,Node* root,vector<string>&ans)
    {
        if(i==s.size())
        {
            dum.pop_back();
            ans.push_back(dum);
            return;
        }
        Node* dum2=root;
        for(int index=i;index<s.size();index++)
        {
            if(dum2->links[s[index]-'a']!=NULL)
            dum2=dum2->links[s[index]-'a'];
            else
                break;
            if(dum2->end==1)
            {
                string d2=s.substr(i,index-i+1)+" ";
                solver(index+1,s,dum+d2,root,ans);
            }
        }
    }
    vector<string> wordBreak(string s, vector<string>& word) 
    {
        vector<string>ans;
        Node* root=new Node();
        insert(root,word);
        string dum="";
        solver(0,s,dum,root,ans);
        return ans;
    }
};
