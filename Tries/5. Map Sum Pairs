Typical Trie problem just for practice
problem link-> https://leetcode.com/problems/map-sum-pairs/
class Node
{
    public:
    Node* links[26];
    int v=0;
    int is_end=0;
    int hold=0;
};
class MapSum {
public:
    Node* root;
    MapSum() 
    {
        root=new Node();
    }
    
    void insert(string key, int val) 
    {
        bool take=true;
        Node* dum=root;
        
         for(int i=0;i<key.size();i++)
        {
            if(dum->links[key[i]-'a']==NULL)
           {
                take=false;
                break;
           }
            dum=dum->links[key[i]-'a'];
        }
        Node* dum2=root;
        if(take==true && dum->is_end==1)
        {
            int h=dum->hold;
            //cout<<val<<" "<<h<<endl;
            for(int i=0;i<key.size();i++)
            {
                dum2=dum2->links[key[i]-'a'];
                dum2->v+=val-h;
            }
            dum2->is_end=1;
            dum2->hold=val;
            return;
        }
        
        for(int i=0;i<key.size();i++)
        {
            if(dum2->links[key[i]-'a']==NULL)
                dum2->links[key[i]-'a']=new Node();
            dum2=dum2->links[key[i]-'a'];
            dum2->v+=val;
        }
        dum2->is_end=1;
        dum2->hold=val;
        
    }
    
    int sum(string prefix) 
    {
        Node* dum=root;
        for(int i=0;i<prefix.size();i++)
        {
            if(dum->links[prefix[i]-'a']==NULL)
                return 0;
            else
                dum=dum->links[prefix[i]-'a'];
        }
    
        return dum->v;
    }
};
